<?php

require_once __DIR__ . '/mock/Controller.php';

use Minity\Http\Response;

/**
 * Test class for AbstractController.
 * Generated by PHPUnit on 2012-03-10 at 21:22:13.
 */
class AbstractControllerTest extends PHPUnit_Framework_TestCase
{
    public function testGetRequest()
    {
        $services = $this->getMock('Minity\Service\Container');
        $request  = $this->createRequestMock();
        $controller = new DefaultController($services, $request);
        $this->assertSame($request, $controller->getRequest());
    }

    public function testExecute()
    {
        $services = $this->getMock('Minity\Service\Container');
        $request  = $this->createRequestMock();
        $actionMethod = 'actionList';
        $response = new Response('');
        $controller = $this->getMock(
            'DefaultController',
            array($actionMethod),
            array($services, $request)
        );
        $controller->expects($this->once())
            ->method($actionMethod)
            ->will($this->returnValue($response));
        $controller->setExecutableAction($actionMethod);
        $controller->execute();
    }

    /**
     * @expectedException RuntimeException
     */
    public function testExecuteBrokenController()
    {
        $services = $this->getMock('Minity\Service\Container');
        $request  = $this->createRequestMock();
        $actionMethod = 'actionUnexistant';
        $controller = new DefaultController($services, $request);
        $controller->setExecutableAction($actionMethod);
        $controller->execute();
    }

    protected function createRequestMock()
    {
        return $this->getMock(
            'Minity\Http\Request',
            array(),
            array(array(),array(), array())
        );
    }
}
